name: .NET CI/CD

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v3.1.11
      with:
        versionSpec: '6.0.x'
        preferLatestVersion: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          6.0.x
          8.0.x

    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v3.1.11

    - name: Display Formatted Version
      uses: gittools/actions/gitversion/command@v3.1.11
      with:
        arguments: '/format {Major}.{Minor}.{Patch}'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: |
        dotnet build --configuration Release --no-restore \
        /p:Version=${{ steps.gitversion.outputs.fullSemVer }} \
        /p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }} \
        /p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }} \
        /p:InformationalVersion=${{ steps.gitversion.outputs.informationalVersion }}

    - name: Pack
      run: |
        dotnet pack --configuration Release --no-build --output nupkgs \
        /p:Version=${{ steps.gitversion.outputs.fullSemVer }} \
        /p:PackageVersion=${{ steps.gitversion.outputs.fullSemVer }}

    - name: Verify DLL Version
      run: |
        for dll in $(find ./src -name "*.dll"); do
          echo "Checking $dll"
          dotnet-assembly-info $dll
        done

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          **/bin
          **/obj
